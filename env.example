# Базовые переменные окружения для локального запуска и CI

# --- Общие переменные окружения ---
ENVIRONMENT=local
TIMEZONE=Europe/Moscow

# --- Настройки Docker-инфраструктуры ---
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=crm
AUTH_DB_USER=auth
AUTH_DB_PASSWORD=auth
CRM_DB_USER=crm
CRM_DB_PASSWORD=crm
PAYMENTS_DB_USER=payments
PAYMENTS_DB_PASSWORD=payments
DOCUMENTS_DB_USER=documents
DOCUMENTS_DB_PASSWORD=documents
TASKS_DB_USER=tasks
TASKS_DB_PASSWORD=tasks
NOTIFICATIONS_DB_USER=notifications
NOTIFICATIONS_DB_PASSWORD=notifications
AUDIT_DB_USER=audit
AUDIT_DB_PASSWORD=audit
BACKUP_DB_USER=backup
BACKUP_DB_PASSWORD=backup

RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_MANAGEMENT_PORT=15672
RABBITMQ_DEFAULT_USER=crm
RABBITMQ_DEFAULT_PASS=crm
RABBITMQ_DEFAULT_VHOST=crm

REDIS_HOST=localhost
REDIS_PORT=6379

CONSUL_HTTP_PORT=8500
CONSUL_GRPC_PORT=8502
CONSUL_DNS_PORT=8600

PGADMIN_PORT=5050
PGADMIN_DEFAULT_EMAIL=admin@local
PGADMIN_DEFAULT_PASSWORD=admin

# --- URL подключения приложений ---
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
AUTH_DATABASE_URL=postgresql://${AUTH_DB_USER}:${AUTH_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=auth
CRM_DATABASE_URL=postgresql://${CRM_DB_USER}:${CRM_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=crm
PAYMENTS_DATABASE_URL=postgresql://${PAYMENTS_DB_USER}:${PAYMENTS_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=payments
DOCUMENTS_DATABASE_URL=postgresql://${DOCUMENTS_DB_USER}:${DOCUMENTS_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=documents
TASKS_DATABASE_URL=postgresql://${TASKS_DB_USER}:${TASKS_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=tasks
NOTIFICATIONS_DATABASE_URL=postgresql://${NOTIFICATIONS_DB_USER}:${NOTIFICATIONS_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=notifications
AUDIT_DATABASE_URL=postgresql://${AUDIT_DB_USER}:${AUDIT_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=audit
BACKUP_DATABASE_URL=postgresql://${BACKUP_DB_USER}:${BACKUP_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=backup

RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/${RABBITMQ_DEFAULT_VHOST}
CRM_RABBITMQ_URL=${RABBITMQ_URL}
CRM_RABBITMQ_EVENTS_EXCHANGE=crm.events
CRM_RABBITMQ_PAYMENTS_QUEUE=crm.payments-sync
CRM_RABBITMQ_PAYMENTS_ROUTING_KEY=payments.*
CRM_RABBITMQ_RETRY_TTL_MS=60000
RABBITMQ_MANAGEMENT_URL=http://${RABBITMQ_HOST}:${RABBITMQ_MANAGEMENT_PORT}

REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
REDIS_CACHE_URL=redis://${REDIS_HOST}:${REDIS_PORT}/1
REDIS_CELERY_URL=redis://${REDIS_HOST}:${REDIS_PORT}/2
REDIS_BULLMQ_URL=redis://${REDIS_HOST}:${REDIS_PORT}/3
REDIS_RATE_LIMIT_URL=redis://${REDIS_HOST}:${REDIS_PORT}/4

CONSUL_HTTP_ADDR=http://localhost:${CONSUL_HTTP_PORT}
CONSUL_GRPC_ADDR=127.0.0.1:${CONSUL_GRPC_PORT}
CONSUL_DNS_ADDR=127.0.0.1:${CONSUL_DNS_PORT}

# --- Безопасность и аутентификация ---
JWT_ACCESS_SECRET=change_me_access_secret
JWT_REFRESH_SECRET=change_me_refresh_secret
JWT_ISSUER=crm.local
JWT_AUDIENCE=crm.clients

# --- Frontend (Next.js) ---
NEXT_PUBLIC_GATEWAY_BASE_URL=https://gateway.local/api
NEXT_PUBLIC_TELEMETRY_DSN=
NEXT_PUBLIC_FEATURE_FLAGS=deals-calendar,notifications
FRONTEND_PROXY_TIMEOUT=15000
NEXT_PUBLIC_CRM_SSE_URL=https://gateway.local/api/crm/stream
NEXT_PUBLIC_NOTIFICATIONS_SSE_URL=https://gateway.local/api/notifications/stream

# --- Общие настройки CI/CD ---
CI_REGISTRY_IMAGE=ghcr.io/your-org/crm-frontend
SENTRY_AUTH_TOKEN=

# PostgreSQL (единый кластер, отдельные схемы на сервис)
# См. docs/tech-stack.md → «Инфраструктура» → «Базы данных»
# Используйте DATABASE_URL для административных задач (миграции, bootstrap данных)
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/crm
# Индивидуальные URI для сервисов на уровне схем/ролей
AUTH_DATABASE_URL=postgresql://auth:auth@localhost:5432/crm?search_path=auth
CRM_DATABASE_URL=postgresql://crm:crm@localhost:5432/crm?search_path=crm
PAYMENTS_DATABASE_URL=postgresql://payments:payments@localhost:5432/crm?search_path=payments
DOCUMENTS_DATABASE_URL=postgresql://documents:documents@localhost:5432/crm?search_path=documents
TASKS_DATABASE_URL=postgresql://tasks:tasks@localhost:5432/crm?search_path=tasks
NOTIFICATIONS_DATABASE_URL=postgresql://notifications:notifications@localhost:5432/crm?search_path=notifications
AUDIT_DATABASE_URL=postgresql://audit:audit@localhost:5432/crm?search_path=audit

# RabbitMQ (асинхронные события и фоновые задания)
# См. docs/tech-stack.md → «Инфраструктура» → «Брокеры сообщений и кэши»
RABBITMQ_URL=amqp://guest:guest@localhost:5672/
# Exchange/queue для конкретных сервисов (например, payments.events) задаются на уровне приложений

# CRM / Deals — обмен доменными событиями и подписка на payments.events
CRM_RABBITMQ_URL=amqp://crm:crm@localhost:5672/crm          # отдельный пользователь/виртуальный хост для CRM, при отсутствии можно reuse RABBITMQ_URL
CRM_RABBITMQ_EVENTS_EXCHANGE=crm.events                      # exchange для публикации событий CRM (`deal.*`, SLA, документы)
CRM_RABBITMQ_PAYMENTS_QUEUE=crm.payments-sync                # очередь подписки на exchange payments.events
CRM_RABBITMQ_PAYMENTS_ROUTING_KEY=payments.*                 # pattern ключей маршрутизации из payments
CRM_RABBITMQ_RETRY_TTL_MS=60000                              # задержка повторной попытки обработки (DLX retry)

# Redis (сессии, кеши, фоновые очереди)
# См. docs/tech-stack.md → «Инфраструктура» → «Брокеры сообщений и кэши»
REDIS_URL=redis://localhost:6379/0              # базовое подключение (Gateway/BFF)
REDIS_CACHE_URL=redis://localhost:6379/1         # кеши справочников и сессий
REDIS_CELERY_URL=redis://localhost:6379/2        # очереди Celery (CRM/Deals)
REDIS_BULLMQ_URL=redis://localhost:6379/3        # очереди BullMQ (Documents)
REDIS_RATE_LIMIT_URL=redis://localhost:6379/4    # rate limiting и FSM Telegram-бота

# Consul (service discovery и конфигурация)
# См. docs/tech-stack.md → «Инфраструктура» → «Service discovery»
CONSUL_HTTP_ADDR=http://localhost:8500

# Внешние интеграции и сервисные ключи
# См. docs/tech-stack.md → «Интеграции»
GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON=               # JSON ключ сервисного аккаунта Google Workspace
GOOGLE_DRIVE_SHARED_DRIVE_ID=                    # ID общего диска/корневой папки для документов
TELEGRAM_BOT_TOKEN=                              # Токен Telegram Bot API
TELEGRAM_WEBHOOK_URL=                            # Публичный URL, куда Telegram шлёт обновления
TELEGRAM_WEBHOOK_SECRET=                         # Секрет подписи для проверки вебхука (если используется)

# Локальные эмуляторы/заглушки интеграций
# См. docs/local-setup.md → «Интеграции»
GOOGLE_DRIVE_EMULATOR_URL=http://localhost:9000            # Укажите URL MinIO/localstack; оставьте пустым для доступа к реальному Google Drive
GOOGLE_DRIVE_EMULATOR_ROOT=./var/local-drive               # Локальная папка для файлов эмулятора; на сервере очистите или переопределите путь
TELEGRAM_MOCK_ENABLED=true                                 # true — пересылаем запросы в mock; на сервере установите false/удалите переменную
TELEGRAM_MOCK_SERVER_URL=http://localhost:8085/telegram    # Эндпоинт локальной заглушки; оставьте пустым для реального Telegram
