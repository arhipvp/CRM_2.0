# Базовые переменные окружения для локального запуска и CI

# Frontend (Next.js)
NEXT_PUBLIC_GATEWAY_BASE_URL=https://gateway.local/api
NEXT_PUBLIC_TELEMETRY_DSN=
NEXT_PUBLIC_FEATURE_FLAGS=deals-calendar,notifications
FRONTEND_PROXY_TIMEOUT=15000
NEXT_PUBLIC_CRM_SSE_URL=https://gateway.local/api/crm/stream
# SSE endpoint (text/event-stream) для внутренних уведомлений, совместим с EventSource
NEXT_PUBLIC_NOTIFICATIONS_SSE_URL=https://gateway.local/api/notifications/stream

# Порты и базовые URL сервисов (локальный запуск)
# Ссылки на логику переменных указаны в README соответствующих сервисов и в docs/local-setup.md
FRONTEND_SERVICE_PORT=3000                                 # См. frontend/README.md
GATEWAY_SERVICE_PORT=8080                                  # См. backend/gateway/README.md
GATEWAY_BASE_URL=http://localhost:${GATEWAY_SERVICE_PORT}/api
AUTH_SERVICE_PORT=8081                                     # См. backend/auth/README.md
AUTH_BASE_URL=http://localhost:${AUTH_SERVICE_PORT}
AUTH_REDIS_URL=redis://localhost:6379/5
AUTH_JWT_ISSUER=http://localhost:${AUTH_SERVICE_PORT}/auth
CRM_SERVICE_PORT=8082                                      # См. backend/crm/README.md
CRM_BASE_URL=http://localhost:${CRM_SERVICE_PORT}
CRM_REDIS_URL=redis://localhost:6379/2
PAYMENTS_SERVICE_PORT=8083                                 # См. backend/payments/README.md
PAYMENTS_BASE_URL=http://localhost:${PAYMENTS_SERVICE_PORT}
PAYMENTS_RABBITMQ_URL=amqp://payments:payments@localhost:5672/payments
PAYMENTS_CURRENCY_API_URL=https://api.exchangeratesapi.io/latest
DOCUMENTS_SERVICE_PORT=8084                                # См. backend/documents/README.md
DOCUMENTS_BASE_URL=http://localhost:${DOCUMENTS_SERVICE_PORT}
DOCUMENTS_REDIS_URL=redis://localhost:6379/3
NOTIFICATIONS_SERVICE_PORT=8085                            # См. backend/notifications/README.md
NOTIFICATIONS_BASE_URL=http://localhost:${NOTIFICATIONS_SERVICE_PORT}
NOTIFICATIONS_RABBITMQ_URL=amqp://notifications:notifications@localhost:5672/notifications
NOTIFICATIONS_REDIS_URL=redis://localhost:6379/4
TASKS_SERVICE_PORT=8086                                    # См. backend/tasks/README.md
TASKS_BASE_URL=http://localhost:${TASKS_SERVICE_PORT}
TASKS_RABBITMQ_URL=amqp://tasks:tasks@localhost:5672/tasks
TASKS_REDIS_URL=redis://localhost:6379/6
REPORTS_SERVICE_PORT=8087                                  # См. backend/reports/README.md
REPORTS_BASE_URL=http://localhost:${REPORTS_SERVICE_PORT}
REPORTS_SOURCE_SCHEMAS=crm,audit
AUDIT_SERVICE_PORT=8088                                    # См. backend/audit/README.md
AUDIT_BASE_URL=http://localhost:${AUDIT_SERVICE_PORT}
AUDIT_RABBITMQ_URL=amqp://audit:audit@localhost:5672/audit

# Общие настройки CI/CD
CI_REGISTRY_IMAGE=ghcr.io/your-org/crm-frontend
SENTRY_AUTH_TOKEN=

# PostgreSQL (единый кластер, отдельные схемы на сервис)
# См. docs/tech-stack.md → «Инфраструктура» → «Базы данных»
# Используйте DATABASE_URL для административных задач (миграции, bootstrap данных)
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/crm
# Индивидуальные URI для сервисов на уровне схем/ролей
AUTH_DATABASE_URL=postgresql://auth:auth@localhost:5432/crm?search_path=auth
CRM_DATABASE_URL=postgresql://crm:crm@localhost:5432/crm?search_path=crm
PAYMENTS_DATABASE_URL=postgresql://payments:payments@localhost:5432/crm?search_path=payments
DOCUMENTS_DATABASE_URL=postgresql://documents:documents@localhost:5432/crm?search_path=documents
TASKS_DATABASE_URL=postgresql://tasks:tasks@localhost:5432/crm?search_path=tasks
NOTIFICATIONS_DATABASE_URL=postgresql://notifications:notifications@localhost:5432/crm?search_path=notifications
AUDIT_DATABASE_URL=postgresql://audit:audit@localhost:5432/crm?search_path=audit

# RabbitMQ (асинхронные события и фоновые задания)
# См. docs/tech-stack.md → «Инфраструктура» → «Брокеры сообщений и кэши»
RABBITMQ_URL=amqp://guest:guest@localhost:5672/
# Exchange/queue для конкретных сервисов (например, payments.events) задаются на уровне приложений

# CRM / Deals — обмен доменными событиями и подписка на payments.events
CRM_RABBITMQ_URL=amqp://crm:crm@localhost:5672/crm          # отдельный пользователь/виртуальный хост для CRM, при отсутствии можно reuse RABBITMQ_URL
CRM_RABBITMQ_EVENTS_EXCHANGE=crm.events                      # exchange для публикации событий CRM (`deal.*`, SLA, документы)
CRM_RABBITMQ_PAYMENTS_QUEUE=crm.payments-sync                # очередь подписки на exchange payments.events
CRM_RABBITMQ_PAYMENTS_ROUTING_KEY=payments.*                 # pattern ключей маршрутизации из payments
CRM_RABBITMQ_RETRY_TTL_MS=60000                              # задержка повторной попытки обработки (DLX retry)

# Redis (сессии, кеши, фоновые очереди)
# См. docs/tech-stack.md → «Инфраструктура» → «Брокеры сообщений и кэши»
REDIS_URL=redis://localhost:6379/0              # базовое подключение (Gateway/BFF)
REDIS_CACHE_URL=redis://localhost:6379/1         # кеши справочников и сессий
REDIS_CELERY_URL=redis://localhost:6379/2        # очереди Celery (CRM/Deals)
REDIS_BULLMQ_URL=redis://localhost:6379/3        # очереди BullMQ (Documents)
REDIS_RATE_LIMIT_URL=redis://localhost:6379/4    # rate limiting и FSM Telegram-бота

# Consul (service discovery и конфигурация)
# См. docs/tech-stack.md → «Инфраструктура» → «Service discovery»
CONSUL_HTTP_ADDR=http://localhost:8500

# Внешние интеграции и сервисные ключи
# См. docs/tech-stack.md → «Интеграции»
GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON=               # JSON ключ сервисного аккаунта Google Workspace
GOOGLE_DRIVE_SHARED_DRIVE_ID=                    # ID общего диска/корневой папки для документов
TELEGRAM_BOT_TOKEN=                              # Токен Telegram Bot API
TELEGRAM_WEBHOOK_URL=                            # Публичный URL, куда Telegram шлёт обновления
TELEGRAM_WEBHOOK_SECRET=                         # Секрет подписи для проверки вебхука (если используется)
