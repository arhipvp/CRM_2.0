# Базовые переменные окружения для локального запуска.
# ⚠️ GitHub Actions временно отключены, но значения ниже сохраняются,
# чтобы локальные сборки повторяли шаги будущего CI.
CI_CD_DISABLED=true

# --- Общие переменные окружения ---
ENVIRONMENT=local
TIMEZONE=Europe/Moscow

# Пути для журналов вспомогательных скриптов (можно переопределить при необходимости).
# DEV_UP_LOG_FILE=.local/logs/dev-up.log
# START_BACKEND_LOG_FILE=.local/run/backend/start-backend.log

# --- Настройки Docker-инфраструктуры ---
POSTGRES_HOST=localhost
POSTGRES_PORT=5432                               # Порт PostgreSQL на хосте; внутри docker-compose сервис слушает 5432
# POSTGRES_PORT — порт, который будет проброшен на хост. Меняйте его, если 5432 занят.
POSTGRES_PORT=5432
# POSTGRES_CONTAINER_PORT — внутренний порт кластера PostgreSQL в Docker. Оставьте 5432,
# чтобы сервисы внутри compose всегда подключались к контейнеру.
POSTGRES_CONTAINER_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=crm
AUTH_DB_USER=auth
AUTH_DB_PASSWORD=auth
CRM_DB_USER=crm
CRM_DB_PASSWORD=crm
DOCUMENTS_DB_USER=documents
DOCUMENTS_DB_PASSWORD=documents
TASKS_DB_USER=tasks
TASKS_DB_PASSWORD=tasks
NOTIFICATIONS_DB_USER=notifications
NOTIFICATIONS_DB_PASSWORD=notifications
REPORTS_DB_USER=reports
REPORTS_DB_PASSWORD=reports
AUDIT_DB_USER=audit
AUDIT_DB_PASSWORD=audit
BACKUP_DB_USER=backup
BACKUP_DB_PASSWORD=backup

RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_MANAGEMENT_PORT=15672
RABBITMQ_DEFAULT_USER=crm
RABBITMQ_DEFAULT_PASS=crm
RABBITMQ_DEFAULT_VHOST=crm
# Скрипт infra/rabbitmq/bootstrap.sh использует *_RABBITMQ_URL как единый источник
# и пропускает записи без корректных пользователя/vhost, выводя предупреждение.
# правды для пользователей и vhost-ов. При добавлении сервисов обновляйте список
# переменных ниже — скрипт автоматически создаст соответствующие объекты.
# Значения выше соответствуют дефолтному пользователю/vhost `crm`, который создаётся Docker Compose.
# Для сервисов с собственными правами указывайте URL вида `SERVICE_RABBITMQ_URL=amqp://user:pass@host:port/vhost` (см. примеры ниже).

REDIS_HOST=localhost
REDIS_PORT=6379

CONSUL_HTTP_PORT=8500
CONSUL_GRPC_PORT=8502
CONSUL_DNS_PORT=8600

PGADMIN_PORT=5050
PGADMIN_DEFAULT_EMAIL=admin@local
PGADMIN_DEFAULT_PASSWORD=admin

# --- URL подключения приложений ---
# PostgreSQL (единый кластер, отдельные схемы на сервис)
# См. docs/tech-stack.md → «Инфраструктура» → «Базы данных»
# Используйте DATABASE_URL для административных задач (миграции, bootstrap данных)
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/crm
# Auth работает через R2DBC и указывает схему `auth` параметром `schema` (допустим `search_path`)
AUTH_DATABASE_URL=r2dbc:postgresql://auth:auth@localhost:5432/crm?schema=auth
CRM_DATABASE_URL=postgresql://crm:crm@localhost:5432/crm?search_path=crm
DOCUMENTS_DATABASE_URL=postgresql://documents:documents@localhost:5432/crm?search_path=documents
DOCUMENTS_DATABASE_SCHEMA=documents                         # Имя схемы PostgreSQL для сервиса документов
DOCUMENTS_RUN_MIGRATIONS=false                               # true — применять миграции TypeORM при старте API/воркера
TASKS_DATABASE_URL=postgresql://tasks:tasks@localhost:5432/crm?search_path=tasks
TASKS_TYPEORM_LOGGING=false
NOTIFICATIONS_DATABASE_URL=postgresql://notifications:notifications@localhost:5432/crm?search_path=notifications
REPORTS_DATABASE_URL=postgresql://reports:reports@localhost:5432/crm?search_path=reports
REPORTS_SCHEMA=reports
REPORTS_CRM_SCHEMA=crm
REPORTS_AUDIT_SCHEMA=audit
# При необходимости добавьте дополнительные исходные схемы через запятую (например, crm,audit,marketing).
REPORTS_SOURCE_SCHEMAS=crm,audit
AUDIT_DB_SCHEMA=audit
AUDIT_JDBC_URL=jdbc:postgresql://audit:audit@localhost:5432/crm?currentSchema=audit
AUDIT_R2DBC_URL=r2dbc:postgresql://audit:audit@localhost:5432/crm?schema=audit
BACKUP_DATABASE_URL=postgresql://backup:backup@localhost:5432/crm?search_path=backup
BACKUP_SERVICE_PORT=8094
BACKUP_TIMEZONE=Europe/Moscow
BACKUP_POSTGRES_BACKUP_DSN=postgresql://postgres:postgres@localhost:5432/crm
# Для отключения S3 и использования DummyStorage удалите переменные ниже или оставьте пустыми (см. backend/backup/README.md).
# Не подставляйте пробелы вместо значения — они будут отброшены и endpoint не будет передан в клиент.
# Указывайте endpoint как URL, начинающийся с http:// или https://, без пробелов в начале и конце строки.
# Пример: BACKUP_S3_ENDPOINT_URL=https://storage.local
BACKUP_S3_ENDPOINT_URL=
# Пустое значение заменится на регион по умолчанию (us-east-1)
BACKUP_S3_REGION_NAME=
BACKUP_S3_BUCKET=
BACKUP_S3_ACCESS_KEY=
BACKUP_S3_SECRET_KEY=
BACKUP_ARTIFACTS_DIR=/tmp/backup-artifacts
# RabbitMQ для сервиса резервного копирования: URL на хосте (localhost) и внутри docker compose (сетевое имя `rabbitmq`).
BACKUP_RABBITMQ_URL=amqp://crm:crm@localhost:5672/crm
BACKUP_RABBITMQ_INTERNAL_URL=amqp://crm:crm@rabbitmq:5672/crm
BACKUP_NOTIFICATION_EXCHANGE=backup.notifications
BACKUP_NOTIFICATION_ROUTING_KEY=jobs
BACKUP_RABBITMQ_MANAGEMENT_URL=http://localhost:15672
BACKUP_RABBITMQ_INTERNAL_MANAGEMENT_URL=http://rabbitmq:15672
BACKUP_RABBITMQ_ADMIN_USER=crm
BACKUP_RABBITMQ_ADMIN_PASSWORD=crm
BACKUP_RABBITMQ_VHOST=crm
BACKUP_CONSUL_HTTP_ADDR=http://localhost:8500
BACKUP_CONSUL_TOKEN=
BACKUP_REDIS_HOST=localhost
BACKUP_REDIS_PORT=6379
BACKUP_REDIS_PASSWORD=
BACKUP_REDIS_DATA_DIR=/var/lib/redis

# Базовый URL использует пользователя CRM и vhost `crm`, поэтому подходит сервисам без собственного vhost.
# Индивидуальные URL ниже требуют, чтобы соответствующие пользователи и vhost-ы были созданы заранее (см. docs/local-setup.md#создайте-пользователей-и-vhost-ы-rabbitmq-для-сервисов).
RABBITMQ_URL=amqp://crm:crm@localhost:5672/crm
CRM_RABBITMQ_URL=amqp://crm:crm@localhost:5672/crm                            # CRM публикует события во vhost `crm`; переопределите при другом пользователе
RABBITMQ_MANAGEMENT_URL=http://localhost:15672

# Redis (сессии, кеши, фоновые очереди)
# См. docs/tech-stack.md → «Инфраструктура» → «Брокеры сообщений и кэши»
REDIS_URL=redis://localhost:6379/0
REDIS_CACHE_URL=redis://localhost:6379/1
REDIS_CELERY_URL=redis://localhost:6379/2
REDIS_BULLMQ_URL=redis://localhost:6379/3
REDIS_RATE_LIMIT_URL=redis://localhost:6379/4
REDIS_KEY_PREFIX=gateway
REDIS_CACHE_TTL=300
REDIS_HEARTBEAT_PREFIX=gateway:sse

# Consul (service discovery и конфигурация)
# См. docs/tech-stack.md → «Инфраструктура» → «Service discovery»
CONSUL_HTTP_ADDR=http://localhost:8500
CONSUL_GRPC_ADDR=127.0.0.1:8502
CONSUL_DNS_ADDR=127.0.0.1:8600
CONSUL_ENABLED=true
CONSUL_HTTP_TIMEOUT=5000

# --- Безопасность и аутентификация ---
JWT_ACCESS_SECRET=change_me_access_secret
JWT_REFRESH_SECRET=change_me_refresh_secret
JWT_ISSUER=crm.local
JWT_AUDIENCE=crm.clients
SESSION_SECRET=change_me_session_secret

# --- Почтовые уведомления ---
# В локальной среде сервис отправки e-mail не используется.

# --- Frontend (Next.js) ---
# Совпадает с `GATEWAY_BASE_URL` и использует порт `8080`,
# поэтому смена порта Gateway автоматически подтянется на фронтенд.
# Укажите значение `mock`, чтобы отключить реальные запросы и использовать встроенные мок-данные фронтенда.
# Для локального запуска вне Docker переопределите URL на `http://localhost:8080/api`
LOCAL_LAUNCH_OPEN_BROWSER=false                             # Автоматически открывать браузер после scripts/dev-up.sh
NEXT_PUBLIC_API_BASE_URL=http://gateway:8080/api
NEXT_PUBLIC_TELEMETRY_DSN=
NEXT_PUBLIC_FEATURE_FLAGS=deals-calendar,notifications,deal-sidebar-widgets
# Таймаут (в миллисекундах) для проксирования Next.js и клиентских fetch-запросов API в браузере.
# Значение по умолчанию 15000 (15 секунд); на сервере действует отдельный лимит, см. FRONTEND_SERVER_TIMEOUT_MS.
FRONTEND_PROXY_TIMEOUT=15000
# Отдельный таймаут (в миллисекундах) для SSR и серверных экшенов Next.js.
# По умолчанию 7500 (7.5 секунд), чтобы раньше включать мок-данные или ошибки при недоступном бэкенде.
FRONTEND_SERVER_TIMEOUT_MS=7500
# Значение по умолчанию рассчитано на запуск фронтенда в Docker-сети infra и обращение к gateway по сервисному имени.
# При сетевой ошибке фронтенд автоматически отключает соответствующий поток до перезагрузки вкладки,
# чтобы не держать «битые» подключения. Обновите страницу после восстановления инфраструктуры,
# чтобы активировать поток повторно.
NEXT_PUBLIC_CRM_SSE_URL=http://gateway:8080/api/v1/streams/deals     # Публичный SSE-канал сделок (маршрут Gateway). Оставьте пустым, чтобы временно отключить поток.
NEXT_PUBLIC_NOTIFICATIONS_SSE_URL=http://gateway:8080/api/v1/streams/notifications # Очистите переменную, если уведомления должны работать только локально.
# При запуске фронтенда на хостовой машине переопределите значения в `.env.local` или используйте пример ниже:
# NEXT_PUBLIC_CRM_SSE_URL=http://localhost:8080/api/v1/streams/deals
# NEXT_PUBLIC_NOTIFICATIONS_SSE_URL=http://localhost:8080/api/v1/streams/notifications

# Порты и базовые URL сервисов (локальный запуск)
# Ссылки на логику переменных указаны в README соответствующих сервисов и в docs/local-setup.md
FRONTEND_SERVICE_PORT=3000                                 # Порт Next.js; скрипты `pnpm dev`/`pnpm start` пробрасывают его в `PORT`
GATEWAY_SERVICE_PORT=8080                                  # См. backend/gateway/README.md
GATEWAY_SERVICE_HOST=0.0.0.0                               # Хост прослушивания Gateway (локально оставьте 0.0.0.0)
GATEWAY_BASE_URL=http://localhost:8080/api
BACKUP_BASE_URL=http://localhost:8094
GATEWAY_UPSTREAM_TIMEOUT=5000
GATEWAY_UPSTREAM_SSE_RECONNECT_DELAY=3000
GATEWAY_UPSTREAM_SSE_HEARTBEAT_INTERVAL=15000
GATEWAY_UPSTREAM_SSE_HEARTBEAT_TTL=60
AUTH_SERVICE_PORT=8081                                     # См. backend/auth/README.md
AUTH_BASE_URL=http://localhost:8081
AUTH_REDIS_URL=redis://localhost:6379/5
AUTH_JWT_ISSUER=http://localhost:8081
AUTH_JWT_SECRET=change_me                                   # Замените на случайное значение для локальной разработки
AUTH_JWT_AUDIENCE=crm-clients
AUTH_ACCESS_TOKEN_TTL=PT15M                                 # ISO-8601 длительность (15 минут)
AUTH_REFRESH_TOKEN_TTL=P7D                                  # ISO-8601 длительность (7 дней, формат «PnDTnHnM» без префикса PT для дней)
AUTH_REFRESH_TOKEN_TTL=P7D                                  # ISO-8601 длительность (7 дней, формат P7D)
CRM_SERVICE_HOST=0.0.0.0                                   # Хост, на котором FastAPI слушает (переопределите при необходимости)
CRM_SERVICE_PORT=8082                                      # См. backend/crm/README.md
CRM_BASE_URL=http://localhost:8082
CRM_REDIS_URL=redis://localhost:6379/2
CRM_EVENTS_EXCHANGE=crm.events
CRM_DEFAULT_TENANT_ID=                                     # Укажите UUID, чтобы использовать тенанта по умолчанию, или оставьте пустым для обязательного заголовка X-Tenant-ID
CRM_CELERY_BROKER_URL=redis://localhost:6379/2
CRM_CELERY_RESULT_BACKEND=redis://localhost:6379/2
CRM_CELERY_RETRY_DELAY_SECONDS=60
CRM_DOCUMENTS_BASE_URL=http://localhost:8084/api/v1        # Базовый URL API сервиса Documents для получения метаданных
# BullMQ очередь синхронизации прав документов
CRM_PERMISSIONS_QUEUE_NAME=permissions:sync
CRM_PERMISSIONS_QUEUE_PREFIX=bull
CRM_PERMISSIONS_JOB_NAME=permissions.sync
CRM_PERMISSIONS_REDIS_URL=redis://localhost:6379/2
DOCUMENTS_SERVICE_PORT=8084                                # См. backend/documents/README.md
DOCUMENTS_BASE_URL=http://localhost:8084
DOCUMENTS_REDIS_URL=redis://localhost:6379/3
DOCUMENTS_REDIS_PREFIX=documents                              # Префикс ключей BullMQ в Redis
DOCUMENTS_PERMISSIONS_SYNC_QUEUE_NAME=documents.permissions.sync # Очередь BullMQ синхронизации прав папок
DOCUMENTS_PERMISSIONS_SYNC_JOB_TTL=300                        # TTL задания синхронизации прав (секунды)
DOCUMENTS_QUEUE_NAME=documents:tasks                           # Имя очереди BullMQ (job names: documents.upload/documents.sync)
DOCUMENTS_STORAGE_DRIVER=local                                 # Драйвер файлового хранилища (local, s3 и т.п.)
DOCUMENTS_STORAGE_ROOT=/var/lib/crm/documents                  # Абсолютный путь к корневому каталогу документов
DOCUMENTS_STORAGE_USER=crm-docs                                # Системный пользователь-владелец каталога
DOCUMENTS_STORAGE_GROUP=crm-sales                              # Основная группа, применяемая к каталогу
DOCUMENTS_STORAGE_DEFAULT_MODE=0770                            # Маска прав для создаваемых директорий
DOCUMENTS_STORAGE_ACL_ENABLED=true                             # Включить применение POSIX ACL
DOCUMENTS_STORAGE_QUOTA_MB=                                    # (опционально) Ограничение на суммарный объём файлов
DOCUMENTS_STORAGE_PUBLIC_BASE_URL=                             # (опционально) Публичный URL reverse-proxy для скачивания файлов
DOCUMENTS_UPLOAD_URL_BASE=http://localhost:9000/documents/upload  # Базовый URL файлового шлюза для подписанных ссылок
DOCUMENTS_UPLOAD_URL_TTL=900                                   # TTL подписанной ссылки (секунды)
DOCUMENTS_FOLDERS_TEMPLATE_DEFAULT="{title}"                     # Общий шаблон имени папки (плейсхолдеры: {title}, {ownerId}, {ownerType})
DOCUMENTS_FOLDERS_TEMPLATE_CLIENT="Client {ownerId}"             # Шаблон названия папки клиента
DOCUMENTS_FOLDERS_TEMPLATE_DEAL="Deal {ownerId}"                 # Шаблон названия папки сделки
DOCUMENTS_FOLDERS_TEMPLATE_POLICY="Policy {ownerId}"             # Шаблон названия папки полиса
DOCUMENTS_FOLDERS_TEMPLATE_PAYMENT="Payment {ownerId}"           # Шаблон названия папки платежа
DOCUMENTS_FOLDERS_WEB_BASE_URL=https://files.local/documents/    # Базовый URL reverse-proxy/файлового браузера
DOCUMENTS_BACKUP_STRATEGY=restic                                # Описание стратегии бэкапа каталога документов
DOCUMENTS_BACKUP_TARGET=s3:https://backup.example.com/crm-docs   # Целевой бакет/путь для бэкапов
DOCUMENTS_BACKUP_RETENTION=7d                                   # Политика хранения бэкапов (например, 7 дней)
NOTIFICATIONS_SERVICE_PORT=8085                            # См. backend/notifications/README.md
NOTIFICATIONS_BASE_URL=http://localhost:8085/api
NOTIFICATIONS_RABBITMQ_URL=amqp://notifications:notifications@localhost:5672/notifications # Требует предварительного создания пользователя и vhost
NOTIFICATIONS_REDIS_URL=redis://localhost:6379/4
NOTIFICATIONS_HTTP_HOST=0.0.0.0
NOTIFICATIONS_HTTP_PORT=8085
NOTIFICATIONS_DB_HOST=localhost
NOTIFICATIONS_DB_PORT=5432
NOTIFICATIONS_DB_NAME=crm
NOTIFICATIONS_DB_SSL=false
NOTIFICATIONS_RABBITMQ_URI=amqp://notifications:notifications@localhost:5672/notifications
NOTIFICATIONS_RABBITMQ_EXCHANGE=notifications.exchange
NOTIFICATIONS_RABBITMQ_QUEUE=notifications.events
NOTIFICATIONS_RABBITMQ_ROUTING_KEY=notifications.*
NOTIFICATIONS_RABBITMQ_QUEUE_DURABLE=true
NOTIFICATIONS_DISPATCH_EXCHANGE=notifications.exchange
NOTIFICATIONS_DISPATCH_ROUTING_KEY=notifications.dispatch
NOTIFICATIONS_DISPATCH_REDIS_CHANNEL=notifications:dispatch
NOTIFICATIONS_DISPATCH_RETRY_ATTEMPTS=3                      # Общее число повторов (RabbitMQ, Redis, внутренний обработчик)
NOTIFICATIONS_DISPATCH_RETRY_DELAY_MS=60000                  # Пауза между попытками в миллисекундах
NOTIFICATIONS_REDIS_HOST=localhost
NOTIFICATIONS_REDIS_PORT=6379
NOTIFICATIONS_REDIS_USERNAME=
NOTIFICATIONS_REDIS_PASSWORD=
NOTIFICATIONS_REDIS_DB=4
NOTIFICATIONS_REDIS_PREFIX=notifications:
NOTIFICATIONS_TELEGRAM_ENABLED=false
NOTIFICATIONS_TELEGRAM_MOCK=true
NOTIFICATIONS_TELEGRAM_BOT_TOKEN=
NOTIFICATIONS_TELEGRAM_CHAT_ID=
NOTIFICATIONS_TELEGRAM_WEBHOOK_ENABLED=false
NOTIFICATIONS_TELEGRAM_WEBHOOK_SECRET=
NOTIFICATIONS_TELEGRAM_WEBHOOK_SIGNATURE_HEADER=x-telegram-signature
NOTIFICATIONS_SSE_RETRY_MS=5000
NOTIFICATIONS_TEMPLATES_DEFAULT_LOCALE=ru-RU             # Базовая локаль для шаблонов при отсутствии значения в запросе
TELEGRAM_BOT_SERVICE_PORT=8089                              # См. backend/telegram-bot/README.md
TELEGRAM_BOT_BOT_TOKEN=dev-mock-token
TELEGRAM_BOT_BOT_API_BASE=http://localhost:8085/telegram
TELEGRAM_BOT_WEBHOOK_SECRET=dev-webhook-secret
TELEGRAM_BOT_REDIS_URL=redis://localhost:6379/6
TELEGRAM_BOT_RABBITMQ_URL=amqp://telegram:telegram@localhost:5672/telegram
TELEGRAM_BOT_RABBITMQ_EXCHANGE_CRM=crm.domain
TELEGRAM_BOT_RABBITMQ_EXCHANGE_TASKS=tasks.events
TELEGRAM_BOT_RABBITMQ_EXCHANGE_NOTIFICATIONS=notifications.events
TELEGRAM_BOT_RABBITMQ_QUEUE_NOTIFICATIONS=telegram.bot.notifications
TELEGRAM_BOT_RABBITMQ_QUEUE_CRM=telegram.bot.crm
TELEGRAM_BOT_EVENT_SOURCE=crm.telegram-bot
TELEGRAM_BOT_AUTH_BASE_URL=http://localhost:8081/api
TELEGRAM_BOT_AUTH_SERVICE_TOKEN=change_me
TELEGRAM_BOT_CRM_BASE_URL=http://localhost:8082/api
TELEGRAM_BOT_CRM_SERVICE_TOKEN=change_me
TELEGRAM_BOT_DEFAULT_TENANT_ID=
TELEGRAM_BOT_NOTIFICATIONS_BASE_URL=http://localhost:8085/api/v1
TELEGRAM_BOT_NOTIFICATIONS_SERVICE_TOKEN=change_me
TELEGRAM_BOT_HEALTHCHECK_TOKEN=bot-health-token
TELEGRAM_BOT_ENVIRONMENT=dev
TASKS_SERVICE_PORT=8086                                    # См. backend/tasks/README.md
TASKS_SERVICE_HOST=0.0.0.0                                   # Хост прослушивания API Tasks
TASKS_BASE_URL=http://localhost:8086
TASKS_EVENTS_EXCHANGE=tasks.events                           # Exchange, в который Tasks публикует события
TASKS_EVENTS_SOURCE=tasks.service                            # Идентификатор источника CloudEvents
TASKS_EVENTS_TASK_CREATED_KEY=task.created                   # Routing key события создания задачи
TASKS_EVENTS_STATUS_CHANGED_KEY=task.status.changed          # Routing key события смены статуса задачи
TASKS_EVENTS_REMINDER_KEY=task.reminder                      # Routing key события напоминания по задаче
TASKS_DELAYED_QUEUE_KEY=tasks:delayed                        # Ключ Sorted Set в Redis для отложенных задач
TASKS_REMINDERS_QUEUE_KEY=tasks:reminders                    # Ключ Sorted Set в Redis для напоминаний по задачам
TASKS_REMINDERS_POLL_INTERVAL_MS=5000                        # Интервал опроса Sorted Set напоминаний воркером TaskReminderProcessor (мс)
TASKS_WORKER_ENABLED=false                                   # Включайте true для воркеров
TASKS_WORKER_POLL_INTERVAL_MS=5000                           # Интервал опроса Redis (мс)
TASKS_WORKER_BATCH_SIZE=100                                  # Сколько задач активировать за один проход воркера
TASKS_RABBITMQ_URL=amqp://tasks:tasks@localhost:5672/tasks # Требует предварительного создания пользователя и vhost
TASKS_REDIS_URL=redis://localhost:6379/6
# FastAPI-сервис Reports (poetry run reports-api)
REPORTS_SERVICE_PORT=8087                                  # См. backend/reports/README.md
REPORTS_BASE_URL=http://localhost:8087
REPORTS_SERVICE_HOST=0.0.0.0
AUDIT_SERVICE_PORT=8088                                    # См. backend/audit/README.md
AUDIT_BASE_URL=http://localhost:8088
AUDIT_RABBITMQ_HOST=localhost
AUDIT_RABBITMQ_PORT=5672
AUDIT_RABBITMQ_USER=audit
AUDIT_RABBITMQ_PASSWORD=audit
AUDIT_RABBITMQ_VHOST=audit
AUDIT_RABBITMQ_URL=amqp://audit:audit@localhost:5672/audit # Совместимость со скриптами на bash
AUDIT_EVENTS_QUEUE=audit.events                          # Очередь аудиторских событий от прикладных сервисов
AUDIT_EVENTS_GROUP=audit-service                        # Группа подписчиков для audit.events
AUDIT_EVENTS_EXCHANGE=                                  # Exchange, в который публикуются события; оставьте пустым, чтобы читать напрямую из очереди
AUDIT_CORE_QUEUE=audit.core                              # Очередь core-событий платформы
AUDIT_CORE_GROUP=audit-service                           # Группа подписчиков для audit.core
AUDIT_CORE_EXCHANGE=                                    # Exchange для core-событий; пустое значение значит работу через default exchange
AUDIT_DLQ_QUEUE=audit.dlq                                # Dead-letter очередь для повторной обработки
AUDIT_DLQ_GROUP=audit-dlq-listener                       # Группа обработки dead-letter сообщений
AUDIT_RABBITMQ_PREFETCH=50                               # Prefetch для Cloud Stream консюмера

# Настройки upstream Gateway (используют объявленные выше порты сервисов)
GATEWAY_UPSTREAM_CRM_BASE_URL=http://localhost:8082/api
GATEWAY_UPSTREAM_CRM_SERVICE_NAME=crm-service
GATEWAY_UPSTREAM_CRM_SSE_URL=http://localhost:8082/streams # Внутренний upstream CRM для канала deals
GATEWAY_UPSTREAM_AUTH_BASE_URL=http://localhost:8081/api
GATEWAY_UPSTREAM_AUTH_SERVICE_NAME=auth-service
GATEWAY_UPSTREAM_NOTIFICATIONS_BASE_URL=http://localhost:8085/api
GATEWAY_UPSTREAM_NOTIFICATIONS_SERVICE_NAME=notifications-service
GATEWAY_UPSTREAM_NOTIFICATIONS_SSE_URL=http://localhost:8085/streams
# Общие настройки CI/CD (используйте локально, пока GitHub Actions отключены)
# --- Общие настройки CI/CD ---
CI_REGISTRY_IMAGE=ghcr.io/your-org/crm
SENTRY_AUTH_TOKEN=

# Внешние интеграции и сервисные ключи
# См. docs/local-setup.md → «Интеграции» за шагами получения доступов
# Дополнительные параметры для хранилища документов. Они дополняют основные настройки сервиса (см. выше) и не переопределяют их.
DOCUMENTS_STORAGE_MOUNT_UNIT=documents-mount@    # Имя unit'а systemd для монтирования тома (оставьте пустым, если не используется)
DOCUMENTS_STORAGE_SSH_KEY_PATH=                  # Путь к приватному ключу для доступа к файловому серверу/rsync (если требуется)
TELEGRAM_BOT_TOKEN=                              # Токен Telegram Bot API (обязателен: stage/prod; dev — можно dev-mock-token при включённой заглушке)
TELEGRAM_WEBHOOK_URL=                            # Публичный URL, куда Telegram шлёт обновления (обязателен: stage/prod; dev — оставьте пустым при mock)
TELEGRAM_WEBHOOK_SECRET=                         # Секрет подписи для проверки вебхука (если используется; обязателен: prod при включении проверки)

# Локальные эмуляторы/заглушки интеграций
# См. docs/local-setup.md → «Интеграции»
DOCUMENTS_STORAGE_LOCAL_PATH=./var/local-docs             # Альтернативный локальный путь для разработки (если том не смонтирован)
TELEGRAM_MOCK_ENABLED=true                                 # true — пересылаем запросы в mock (только dev); для stage/prod установите false или удалите переменную
TELEGRAM_MOCK_SERVER_URL=http://localhost:8085/telegram    # Эндпоинт локальной заглушки (dev). Для stage/prod оставьте пустым
