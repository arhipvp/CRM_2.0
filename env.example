# Базовые переменные окружения для локального запуска и CI

# --- Общие переменные окружения ---
ENVIRONMENT=local
TIMEZONE=Europe/Moscow

# --- Настройки Docker-инфраструктуры ---
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=crm
AUTH_DB_USER=auth
AUTH_DB_PASSWORD=auth
CRM_DB_USER=crm
CRM_DB_PASSWORD=crm
PAYMENTS_DB_USER=payments
PAYMENTS_DB_PASSWORD=payments
DOCUMENTS_DB_USER=documents
DOCUMENTS_DB_PASSWORD=documents
TASKS_DB_USER=tasks
TASKS_DB_PASSWORD=tasks
NOTIFICATIONS_DB_USER=notifications
NOTIFICATIONS_DB_PASSWORD=notifications
AUDIT_DB_USER=audit
AUDIT_DB_PASSWORD=audit
BACKUP_DB_USER=backup
BACKUP_DB_PASSWORD=backup

RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_MANAGEMENT_PORT=15672
RABBITMQ_DEFAULT_USER=crm
RABBITMQ_DEFAULT_PASS=crm
RABBITMQ_DEFAULT_VHOST=crm
# Значения выше соответствуют дефолтному пользователю/vhost `crm`, который создаётся Docker Compose.
# Для сервисов с собственными правами указывайте URL вида `SERVICE_RABBITMQ_URL=amqp://user:pass@host:port/vhost` (см. примеры ниже).

REDIS_HOST=localhost
REDIS_PORT=6379

CONSUL_HTTP_PORT=8500
CONSUL_GRPC_PORT=8502
CONSUL_DNS_PORT=8600

PGADMIN_PORT=5050
PGADMIN_DEFAULT_EMAIL=admin@local
PGADMIN_DEFAULT_PASSWORD=admin

# --- URL подключения приложений ---
# PostgreSQL (единый кластер, отдельные схемы на сервис)
# См. docs/tech-stack.md → «Инфраструктура» → «Базы данных»
# Используйте DATABASE_URL для административных задач (миграции, bootstrap данных)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
AUTH_DATABASE_URL=postgresql://${AUTH_DB_USER}:${AUTH_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=auth
CRM_DATABASE_URL=postgresql://${CRM_DB_USER}:${CRM_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=crm
PAYMENTS_DATABASE_URL=postgresql://${PAYMENTS_DB_USER}:${PAYMENTS_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=payments
DOCUMENTS_DATABASE_URL=postgresql://${DOCUMENTS_DB_USER}:${DOCUMENTS_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=documents
TASKS_DATABASE_URL=postgresql://${TASKS_DB_USER}:${TASKS_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=tasks
NOTIFICATIONS_DATABASE_URL=postgresql://${NOTIFICATIONS_DB_USER}:${NOTIFICATIONS_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=notifications
AUDIT_DATABASE_URL=postgresql://${AUDIT_DB_USER}:${AUDIT_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=audit
BACKUP_DATABASE_URL=postgresql://${BACKUP_DB_USER}:${BACKUP_DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?search_path=backup

RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/${RABBITMQ_DEFAULT_VHOST}
# Базовый URL использует пользователя CRM и подходит сервисам без собственного vhost.
# Индивидуальные URL ниже требуют, чтобы соответствующие пользователи и vhost-ы были созданы заранее (см. docs/local-setup.md#создайте-пользователей-и-vhost-ы-rabbitmq-для-сервисов).
CRM_RABBITMQ_URL=${RABBITMQ_URL}                            # CRM публикует события во vhost `crm`; переопределите при другом пользователе
RABBITMQ_MANAGEMENT_URL=http://${RABBITMQ_HOST}:${RABBITMQ_MANAGEMENT_PORT}

# Redis (сессии, кеши, фоновые очереди)
# См. docs/tech-stack.md → «Инфраструктура» → «Брокеры сообщений и кэши»
REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
REDIS_CACHE_URL=redis://${REDIS_HOST}:${REDIS_PORT}/1
REDIS_CELERY_URL=redis://${REDIS_HOST}:${REDIS_PORT}/2
REDIS_BULLMQ_URL=redis://${REDIS_HOST}:${REDIS_PORT}/3
REDIS_RATE_LIMIT_URL=redis://${REDIS_HOST}:${REDIS_PORT}/4

# Consul (service discovery и конфигурация)
# См. docs/tech-stack.md → «Инфраструктура» → «Service discovery»
CONSUL_HTTP_ADDR=http://localhost:${CONSUL_HTTP_PORT}
CONSUL_GRPC_ADDR=127.0.0.1:${CONSUL_GRPC_PORT}
CONSUL_DNS_ADDR=127.0.0.1:${CONSUL_DNS_PORT}

# --- Безопасность и аутентификация ---
JWT_ACCESS_SECRET=change_me_access_secret
JWT_REFRESH_SECRET=change_me_refresh_secret
JWT_ISSUER=crm.local
JWT_AUDIENCE=crm.clients

# --- Почтовые уведомления ---
# В локальной среде сервис отправки e-mail не используется.

# --- Frontend (Next.js) ---
NEXT_PUBLIC_GATEWAY_BASE_URL=https://gateway.local/api
NEXT_PUBLIC_TELEMETRY_DSN=
NEXT_PUBLIC_FEATURE_FLAGS=deals-calendar,notifications
FRONTEND_PROXY_TIMEOUT=15000
NEXT_PUBLIC_CRM_SSE_URL=https://gateway.local/api/v1/streams/deals
NEXT_PUBLIC_NOTIFICATIONS_SSE_URL=https://gateway.local/api/v1/streams/notifications

# Порты и базовые URL сервисов (локальный запуск)
# Ссылки на логику переменных указаны в README соответствующих сервисов и в docs/local-setup.md
FRONTEND_SERVICE_PORT=3000                                 # См. frontend/README.md
GATEWAY_SERVICE_PORT=8080                                  # См. backend/gateway/README.md
GATEWAY_SERVICE_HOST=0.0.0.0                               # Хост прослушивания Gateway (локально оставьте 0.0.0.0)
GATEWAY_BASE_URL=http://localhost:${GATEWAY_SERVICE_PORT}/api
AUTH_SERVICE_PORT=8081                                     # См. backend/auth/README.md
AUTH_BASE_URL=http://localhost:${AUTH_SERVICE_PORT}
AUTH_REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/5
AUTH_JWT_ISSUER=http://localhost:${AUTH_SERVICE_PORT}/auth
CRM_SERVICE_PORT=8082                                      # См. backend/crm/README.md
CRM_BASE_URL=http://localhost:${CRM_SERVICE_PORT}
CRM_REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/2
CRM_EVENTS_EXCHANGE=crm.events
CRM_PAYMENTS_EXCHANGE=payments.events
CRM_PAYMENTS_QUEUE=crm.payments-sync
CRM_PAYMENTS_RETRY_EXCHANGE=crm.payments-sync.retry
CRM_PAYMENTS_RETRY_QUEUE=crm.payments-sync.retry
CRM_PAYMENTS_DLX_EXCHANGE=crm.payments-sync.dlx
CRM_PAYMENTS_DLX_QUEUE=crm.payments-sync.dlx
CRM_PAYMENTS_RETRY_DELAY_MS=60000
CRM_PAYMENTS_RETRY_LIMIT=5
CRM_ENABLE_PAYMENTS_CONSUMER=true
CRM_CELERY_BROKER_URL=${REDIS_CELERY_URL}
CRM_CELERY_RESULT_BACKEND=${REDIS_CELERY_URL}
PAYMENTS_SERVICE_PORT=8083                                 # См. backend/payments/README.md
PAYMENTS_BASE_URL=http://localhost:${PAYMENTS_SERVICE_PORT}
PAYMENTS_RABBITMQ_URL=amqp://payments:payments@${RABBITMQ_HOST}:${RABBITMQ_PORT}/payments # Требует предварительного создания пользователя и vhost
DOCUMENTS_SERVICE_PORT=8084                                # См. backend/documents/README.md
DOCUMENTS_BASE_URL=http://localhost:${DOCUMENTS_SERVICE_PORT}
DOCUMENTS_REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/3
NOTIFICATIONS_SERVICE_PORT=8085                            # См. backend/notifications/README.md
NOTIFICATIONS_BASE_URL=http://localhost:${NOTIFICATIONS_SERVICE_PORT}
NOTIFICATIONS_RABBITMQ_URL=amqp://notifications:notifications@${RABBITMQ_HOST}:${RABBITMQ_PORT}/notifications # Требует предварительного создания пользователя и vhost
NOTIFICATIONS_REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/4
TASKS_SERVICE_PORT=8086                                    # См. backend/tasks/README.md
TASKS_BASE_URL=http://localhost:${TASKS_SERVICE_PORT}
TASKS_RABBITMQ_URL=amqp://tasks:tasks@${RABBITMQ_HOST}:${RABBITMQ_PORT}/tasks # Требует предварительного создания пользователя и vhost
TASKS_REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/6
REPORTS_SERVICE_PORT=8087                                  # См. backend/reports/README.md
REPORTS_BASE_URL=http://localhost:${REPORTS_SERVICE_PORT}
REPORTS_SOURCE_SCHEMAS=crm,audit
AUDIT_SERVICE_PORT=8088                                    # См. backend/audit/README.md
AUDIT_BASE_URL=http://localhost:${AUDIT_SERVICE_PORT}
AUDIT_RABBITMQ_URL=amqp://audit:audit@${RABBITMQ_HOST}:${RABBITMQ_PORT}/audit # Требует предварительного создания пользователя и vhost

# Общие настройки CI/CD
# --- Общие настройки CI/CD ---
CI_REGISTRY_IMAGE=ghcr.io/your-org/crm-frontend
SENTRY_AUTH_TOKEN=

# Внешние интеграции и сервисные ключи
# См. docs/local-setup.md → «Интеграции» за шагами получения доступов
GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON=               # JSON ключ сервисного аккаунта Google Workspace (обязателен: stage/prod; dev — только при доступе к боевому Drive)
GOOGLE_DRIVE_SHARED_DRIVE_ID=                    # ID общего диска/корневой папки для документов (обязателен: stage/prod; dev — не нужен с эмулятором)
TELEGRAM_BOT_TOKEN=                              # Токен Telegram Bot API (обязателен: stage/prod; dev — можно dev-mock-token при включённой заглушке)
TELEGRAM_WEBHOOK_URL=                            # Публичный URL, куда Telegram шлёт обновления (обязателен: stage/prod; dev — оставьте пустым при mock)
TELEGRAM_WEBHOOK_SECRET=                         # Секрет подписи для проверки вебхука (если используется; обязателен: prod при включении проверки)

# Локальные эмуляторы/заглушки интеграций
# См. docs/local-setup.md → «Интеграции»
GOOGLE_DRIVE_EMULATOR_URL=http://localhost:9000            # Укажите URL MinIO/localstack (по умолчанию: dev); оставьте пустым для stage/prod
GOOGLE_DRIVE_EMULATOR_ROOT=./var/local-drive               # Локальная папка для файлов эмулятора (используется только в dev)
TELEGRAM_MOCK_ENABLED=true                                 # true — пересылаем запросы в mock (только dev); для stage/prod установите false или удалите переменную
TELEGRAM_MOCK_SERVER_URL=http://localhost:8085/telegram    # Эндпоинт локальной заглушки (dev). Для stage/prod оставьте пустым
