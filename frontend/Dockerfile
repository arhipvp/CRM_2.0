# syntax=docker/dockerfile:1.7
FROM node:20-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

FROM base AS deps
WORKDIR /app
COPY package.json pnpm-lock.yaml* ./
RUN pnpm install --frozen-lockfile

FROM base AS builder
WORKDIR /app

ARG NEXT_PUBLIC_API_BASE_URL
ARG NEXT_PUBLIC_CRM_SSE_URL
ARG NEXT_PUBLIC_NOTIFICATIONS_SSE_URL
ARG NEXT_PUBLIC_TELEMETRY_DSN
ARG NEXT_PUBLIC_FEATURE_FLAGS
ARG FRONTEND_PROXY_TIMEOUT
ARG FRONTEND_SERVER_TIMEOUT_MS

ENV NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
ENV NEXT_PUBLIC_CRM_SSE_URL=${NEXT_PUBLIC_CRM_SSE_URL}
ENV NEXT_PUBLIC_NOTIFICATIONS_SSE_URL=${NEXT_PUBLIC_NOTIFICATIONS_SSE_URL}
ENV NEXT_PUBLIC_TELEMETRY_DSN=${NEXT_PUBLIC_TELEMETRY_DSN}
ENV NEXT_PUBLIC_FEATURE_FLAGS=${NEXT_PUBLIC_FEATURE_FLAGS}
ENV FRONTEND_PROXY_TIMEOUT=${FRONTEND_PROXY_TIMEOUT}
ENV FRONTEND_SERVER_TIMEOUT_MS=${FRONTEND_SERVER_TIMEOUT_MS}

COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN pnpm build

FROM base AS runner
WORKDIR /app
ENV NODE_ENV=production
ENV PORT=3000

ARG NEXT_PUBLIC_API_BASE_URL
ARG NEXT_PUBLIC_CRM_SSE_URL
ARG NEXT_PUBLIC_NOTIFICATIONS_SSE_URL
ARG NEXT_PUBLIC_TELEMETRY_DSN
ARG NEXT_PUBLIC_FEATURE_FLAGS
ARG FRONTEND_PROXY_TIMEOUT
ARG FRONTEND_SERVER_TIMEOUT_MS

ENV NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
ENV NEXT_PUBLIC_CRM_SSE_URL=${NEXT_PUBLIC_CRM_SSE_URL}
ENV NEXT_PUBLIC_NOTIFICATIONS_SSE_URL=${NEXT_PUBLIC_NOTIFICATIONS_SSE_URL}
ENV NEXT_PUBLIC_TELEMETRY_DSN=${NEXT_PUBLIC_TELEMETRY_DSN}
ENV NEXT_PUBLIC_FEATURE_FLAGS=${NEXT_PUBLIC_FEATURE_FLAGS}
ENV FRONTEND_PROXY_TIMEOUT=${FRONTEND_PROXY_TIMEOUT}
ENV FRONTEND_SERVER_TIMEOUT_MS=${FRONTEND_SERVER_TIMEOUT_MS}

COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/package.json ./package.json

EXPOSE 3000
CMD ["node", "server.js"]
